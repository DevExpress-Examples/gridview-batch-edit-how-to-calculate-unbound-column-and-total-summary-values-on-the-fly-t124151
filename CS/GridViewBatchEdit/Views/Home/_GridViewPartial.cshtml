@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView";
        settings.Width = 600;
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Home", Action = "BatchUpdatePartial" };
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

        settings.ClientSideEvents.BatchEditEndEditing = "OnBatchEditEndEditing";
        settings.ClientSideEvents.BatchEditStartEditing = "OnBatchEditStartEditing";

        settings.KeyFieldName = "ID";


        string[] days = { "Mon", "Tue", "Wen" };
        foreach (var dayName in days) {
            settings.Columns.Add(column =>
            {
                column.FieldName = dayName;
                column.ColumnType = MVCxGridViewColumnType.SpinEdit;

                ASPxSummaryItem summaryItem = new ASPxSummaryItem(column.FieldName, DevExpress.Data.SummaryItemType.Sum);
                summaryItem.Tag = column.FieldName + "_Sum";
                summaryItem.DisplayFormat = "{0}";
                settings.TotalSummary.Add(summaryItem);

                column.SetFooterTemplateContent(c =>
                {
                    Html.DevExpress().Label(lbSettings =>
                    {
                        string fieldName = (c.Column as GridViewDataColumn).FieldName;
                        lbSettings.Name = "label" + fieldName;
                        lbSettings.Properties.EnableClientSideAPI = true;
                        ASPxSummaryItem summaryItem1 = c.Grid.TotalSummary.First(i => i.Tag == (fieldName + "_Sum"));
                        lbSettings.Text = c.Grid.GetTotalSummaryValue(summaryItem1).ToString();
                    }).Render();
                });
            });
        }


        settings.Columns.Add(column =>
        {
            column.UnboundType = DevExpress.Data.UnboundColumnType.Decimal;
            column.FieldName = "Total";
            column.ReadOnly = true;


            ASPxSummaryItem summaryItem = new ASPxSummaryItem(column.FieldName, DevExpress.Data.SummaryItemType.Sum);
            summaryItem.Tag = column.FieldName + "_Sum";
            summaryItem.DisplayFormat = "<strong>{0}</strong>";
            settings.TotalSummary.Add(summaryItem);

            column.SetFooterTemplateContent(c =>
            {
                Html.DevExpress().Label(lbSettings =>
                {
                    string fieldName = (c.Column as GridViewDataColumn).FieldName;
                    lbSettings.Name = "label" + fieldName;
                    lbSettings.Properties.EnableClientSideAPI = true;
                    ASPxSummaryItem summaryItem1 = c.Grid.TotalSummary.First(i => i.Tag == (fieldName + "_Sum"));
                    lbSettings.Text = c.Grid.GetTotalSummaryValue(summaryItem1).ToString();
                }).Render();
            });


            column.SetEditItemTemplateContent(c =>
            {

            });
        });

        settings.HtmlDataCellPrepared = (sender, e) =>
        {
            if (e.DataColumn.FieldName == "Total")
                e.Cell.Attributes.Add("onclick", "event.cancelBubble = true");
        };

        settings.CustomUnboundColumnData = (sender, e) =>
        {
            if (e.Column.FieldName == "Total") {
                int tue = Convert.ToInt32(e.GetListSourceFieldValue("Tue"));
                int mon = Convert.ToInt32(e.GetListSourceFieldValue("Mon"));
                int wen = Convert.ToInt32(e.GetListSourceFieldValue("Wen"));

                e.Value = mon + tue + wen;
            }

        };

        settings.Settings.ShowFooter = true;

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
        };


        settings.SetStatusBarTemplateContent(c =>
        {
            ViewContext.Writer.Write("<div style='text-align: right'>");

            Html.DevExpress().HyperLink(hlSettings =>
            {
                hlSettings.Name = "hlSave";
                hlSettings.Properties.Text = "Save changes";
                hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ GridView.UpdateEdit(); }";
            }).Render();
            ViewContext.Writer.Write("&nbsp;");

            Html.DevExpress().HyperLink(hlSettings =>
            {
                hlSettings.Name = "hlCancel";
                hlSettings.Properties.Text = "Cancel changes";
                hlSettings.Properties.ClientSideEvents.Click = "function(s, e){ GridView.CancelEdit(); GridView.Refresh(); }";
            }).Render();

            ViewContext.Writer.Write("</div>");
        });

    });
    if (ViewData["EditError"] != null) {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
